#include <iostream>
#include <vector>
#include <string>
#include <ctime>

using namespace std;

vector<bool> nextShuffleBin(vector<bool>);

template <class t>
ostream& operator<< (ostream& os, const vector<t>& a);
template <class t>
istream& operator>> (istream& os, vector<t>& a);



int main()
{
	vector<bool> a;
	cin >> a;
	vector<bool> b = nextShuffleBin(a);
	cout << b;
	return 0;
}



vector<bool> nextShuffleBin(vector<bool> a)
{
	int i = a.size() - 1;
	int first;
	int second;

	// Находим неубывающую последовательность
	int count = 0;
	for (i; i > 0; --i)
	{
		if (a[i] && !count) second = i;
		if (a[i]) ++count;
		if (a[i] > a[i - 1])
		{
			first = i - 1;
			break;
		}
	}

	// Меняем элементы
	a[first] = true;
	a[second] = false;
	// Уменьшаем count на 1, потому что одна 1 ушла из неубывающей с конца последовательности
	--count;

	for (i = a.size() - 1; i > first; --i)
	{
		if (count)
		{
			a[i] = true;
			--count;
		}
		else a[i] = false;
	}
	return a;
}

template <class t>
ostream& operator<< (ostream& os, const vector<t>& a)
{
	for (int i = 0; i < a.size(); ++i) os << a[i];
	return os;
}
template <class t>
istream& operator>> (istream& is, vector<t>& a)
{
	string s;
	cin >> s;
	a.resize(s.size());
	for (int i = 0; i < s.size(); ++i) a[i] = s[i] - 48;
	return is;
}